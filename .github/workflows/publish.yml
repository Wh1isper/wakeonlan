name: release
on:
  release:
    types: [published]
permissions:
  contents: write
jobs:
  deploy:
    name: deploy
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux,aarch64-linux,mips-linux,mipsel-linux,mips64-linux,mips64el-linux,riscv64,macos,macos-arm64,windows]
        include:
          - build: linux
            os: ubuntu-latest
            rust: nightly
            target: x86_64-unknown-linux-musl
            linker: musl-tools
          - build: aarch64-linux
            os: ubuntu-latest
            rust: nightly
            target: aarch64-unknown-linux-gnu
            linker: gcc-aarch64-linux-gnu
          - build: mips-linux
            os: ubuntu-latest
            rust: stable
            target: mips-unknown-linux-gnu
            linker: gcc-mips-linux-gnu
          - build: mipsel-linux
            os: ubuntu-latest
            rust: stable
            target: mipsel-unknown-linux-gnu
            linker: gcc-mipsel-linux-gnu
          - build: mips64-linux
            os: ubuntu-latest
            rust: stable
            target: mips64-unknown-linux-gnuabi64
            linker: gcc-mips64-linux-gnuabi64
          - build: mips64el-linux
            os: ubuntu-latest
            rust: stable
            target: mips64el-unknown-linux-gnuabi64
            linker: gcc-mips64el-linux-gnuabi64
          - build: riscv64
            os: ubuntu-latest
            rust: stable
            target: riscv64gc-unknown-linux-gnu
            linker: gcc-riscv64-linux-gnu
          - build: macos
            os: macos-latest
            rust: nightly
            target: x86_64-apple-darwin
          - build: macos-arm64
            os: macos-latest
            rust: nightly
            target: aarch64-apple-darwin
          - build: windows
            os: windows-2019
            rust: nightly-x86_64-msvc
            target: x86_64-pc-windows-msvc
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install linker
        if: matrix.build == 'linux' || matrix.build == 'aarch64-linux' || matrix.build == 'mips-linux' || matrix.build == 'mipsel-linux' ||matrix.build == 'mips64el-linux' || matrix.build == 'mips64-linux' || matrix.build == 'riscv64'
        run: sudo apt-get update && sudo apt-get install ${{ matrix.linker }} -y

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Build binary
        run: cargo build --verbose --release --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

      - name: Strip binary (linux and macos)
        if: matrix.build == 'linux' || matrix.build == 'macos'
        run: strip "target/${{ matrix.target }}/release/wakeonlan"

      - name: rename binary
        shell: bash
        run: |
          mkdir -p binary
          if [ "${{ matrix.build }}" = "windows" ]; then
            cp "./target/${{ matrix.target }}/release/wakeonlan.exe" ./binary/wakeonlan-${{ matrix.target }}.exe
          else
            cp "./target/${{ matrix.target }}/release/wakeonlan" ./binary/wakeonlan-${{ matrix.target }}
          fi
      - name: Upload binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./binary/wakeonlan*
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
